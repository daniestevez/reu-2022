options:
  parameters:
    author: Daniel Estevez
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: signal_detection
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Signal detection
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: freq
  id: variable
  parameters:
    comment: ''
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [632, 644.0]
    rotation: 0
    state: true
- name: nfft
  id: variable
  parameters:
    comment: ''
    value: 2**14
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [312, 12.0]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: 1e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12]
    rotation: 0
    state: enabled
- name: threshold
  id: variable_qtgui_entry
  parameters:
    comment: ''
    gui_hint: ''
    label: Detection threshold
    type: real
    value: '3'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [488, 12.0]
    rotation: 0
    state: true
- name: blocks_message_debug_0
  id: blocks_message_debug
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    en_uvec: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [784, 448.0]
    rotation: 0
    state: disabled
- name: blocks_msgpair_to_var_0
  id: blocks_msgpair_to_var
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    target: freq
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [472, 660.0]
    rotation: 0
    state: true
- name: blocks_nlog10_ff_0
  id: blocks_nlog10_ff
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    k: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    n: '10'
    vlen: nfft
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [296, 212.0]
    rotation: 0
    state: true
- name: blocks_nlog10_ff_0_0
  id: blocks_nlog10_ff
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    k: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    n: '10'
    vlen: nfft
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [448, 356.0]
    rotation: 0
    state: true
- name: blocks_null_sink_0
  id: blocks_null_sink
  parameters:
    affinity: ''
    alias: ''
    bus_structure_sink: '[[0,],]'
    comment: ''
    num_inputs: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [488, 112.0]
    rotation: 0
    state: true
- name: blocks_repeat_0
  id: blocks_repeat
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    interp: '100'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: nfft
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 220.0]
    rotation: 0
    state: true
- name: blocks_repeat_0_0
  id: blocks_repeat
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    interp: '100'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: nfft
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [624, 364.0]
    rotation: 0
    state: true
- name: blocks_throttle_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [296, 108.0]
    rotation: 0
    state: enabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nimport pmt\nimport datetime\n\n\nclass blk(gr.sync_block):\
      \  # other base classes are basic_block, decim_block, interp_block\n    \"\"\
      \"Embedded Python Block example - a simple multiply const\"\"\"\n\n    def __init__(self,\
      \ threshold=3.0, vlen=2**14, samp_rate=1e6):  # only default arguments here\n\
      \        \"\"\"arguments to this function show up as parameters in GRC\"\"\"\
      \n        gr.sync_block.__init__(\n            self,\n            name='Signal\
      \ Detection',   # will show up in GRC\n            in_sig=[(np.float32, vlen)],\n\
      \            out_sig=[(np.float32, vlen)]\n        )\n        # if an attribute\
      \ with the same name as a parameter is found,\n        # a callback is registered\
      \ (properties work, too).\n        self.threshold = threshold\n        self.signal_freq\
      \ = None\n        self.nfft = vlen\n        self.samp_rate = samp_rate\n   \
      \     self.message_port_register_out(pmt.intern('detect_out'))\n\n    def work(self,\
      \ input_items, output_items):\n        in0 = input_items[0]\n        out0 =\
      \ output_items[0]\n\n        #print(f'called work with in0.shape = {in0.shape}\
      \ '\n        #      f' at {datetime.datetime.utcnow().isoformat()}')\n\n   \
      \     median = np.median(in0, axis=1)\n        detected = in0 >= self.threshold\
      \ * median[:, np.newaxis]\n        out0[:] = 0\n        out0[detected] = in0[detected]\n\
      \n        argmax = np.unravel_index(np.argmax(in0), in0.shape)\n        #print(f'argmax\
      \ = {argmax}')\n        if detected[argmax]:\n            detected_freq = np.fft.fftshift(np.fft.fftfreq(self.nfft,\
      \ 1/self.samp_rate))[argmax[1]]\n            if self.signal_freq is None or\
      \ self.signal_freq != detected_freq:\n                print(f'Detected signal\
      \ at {detected_freq:.2f} Hz '\n                      f'({datetime.datetime.utcnow().isoformat()})')\n\
      \                self.signal_freq = detected_freq\n                msg = pmt.cons(pmt.PMT_NIL,\
      \ pmt.from_double(detected_freq))\n                self.message_port_pub(pmt.intern('detect_out'),\
      \ msg)\n        else:\n            self.signal_freq = None\n        \n     \
      \   return len(out0)\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    threshold: threshold
    vlen: nfft
  states:
    _io_cache: ('Signal Detection', 'blk', [('threshold', '3.0'), ('vlen', '16384'),
      ('samp_rate', '1000000.0')], [('0', 'float', 16384)], [('0', 'float', 16384),
      ('detect_out', 'message', 1)], 'Embedded Python Block example - a simple multiply
      const', ['samp_rate', 'threshold'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [280, 372.0]
    rotation: 0
    state: true
- name: freq_xlating_fir_filter_xxx_0
  id: freq_xlating_fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    center_freq: '0'
    comment: ''
    decim: '100'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    taps: firdes.low_pass(1, samp_rate, 0.45 * samp_rate / 100, 0.1 * samp_rate /
      100)
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [224, 516.0]
    rotation: 0
    state: true
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate / 100
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: freq
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.1'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '-30'
    ymin: '-70'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [480, 524.0]
    rotation: 0
    state: true
- name: qtgui_vector_sink_f_0
  id: qtgui_vector_sink_f
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    grid: 'False'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '2'
    ref_level: '0'
    showports: 'False'
    update_time: '0.10'
    vlen: nfft
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    x_axis_label: '"Frequency (Hz)"'
    x_start: -samp_rate/2
    x_step: samp_rate/nfft
    x_units: '""'
    y_axis_label: '"PSD (dB)"'
    y_units: '""'
    ymax: '55'
    ymin: '40'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [856, 204.0]
    rotation: 0
    state: enabled
- name: signal_generation_0
  id: signal_generation
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    gui_hint: ''
    integration_seconds: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    nfft: nfft
    samp_rate: samp_rate
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 196.0]
    rotation: 0
    state: true

connections:
- [blocks_nlog10_ff_0, '0', blocks_repeat_0, '0']
- [blocks_nlog10_ff_0_0, '0', blocks_repeat_0_0, '0']
- [blocks_repeat_0, '0', qtgui_vector_sink_f_0, '0']
- [blocks_repeat_0_0, '0', qtgui_vector_sink_f_0, '1']
- [blocks_throttle_0, '0', blocks_null_sink_0, '0']
- [epy_block_0, '0', blocks_nlog10_ff_0_0, '0']
- [epy_block_0, detect_out, blocks_message_debug_0, print]
- [epy_block_0, detect_out, blocks_msgpair_to_var_0, inpair]
- [epy_block_0, detect_out, freq_xlating_fir_filter_xxx_0, freq]
- [freq_xlating_fir_filter_xxx_0, '0', qtgui_freq_sink_x_0, '0']
- [signal_generation_0, '0', blocks_throttle_0, '0']
- [signal_generation_0, '0', freq_xlating_fir_filter_xxx_0, '0']
- [signal_generation_0, '1', blocks_nlog10_ff_0, '0']
- [signal_generation_0, '1', epy_block_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.2.0
